/* Generated by Yosys 0.27+22 (git sha1 53c0a6b78, gcc 12.2.0-3ubuntu1 -fPIC -Os) */

module bc(clock, reset, ir_data_out, rf_rp_zero, pc_clr, pc_ld, pc_inc, ir_ld, i_rd, leds, d_addr, d_rd, d_wr, rf_s1, rf_s0, rf_w_data, rf_w_addr, rf_rp_addr, rf_rq_addr, rf_w_wr, rf_rp_rd
, rf_rq_rd, alu_s0, alu_s1);
  reg _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire [7:0] _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire [7:0] _22_;
  wire [3:0] _23_;
  wire [3:0] _24_;
  wire [3:0] _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire [3:0] _40_;
  wire _41_;
  wire [3:0] _42_;
  wire _43_;
  wire _44_;
  wire [3:0] _45_;
  wire [3:0] _46_;
  wire _47_;
  wire _48_;
  wire _49_;
  wire _50_;
  wire _51_;
  wire _52_;
  wire _53_;
  wire _54_;
  wire _55_;
  wire _56_;
  wire _57_;
  wire [3:0] _58_;
  reg [3:0] _59_ = 4'h0;
  reg _60_;
  reg _61_;
  reg _62_;
  reg _63_;
  reg _64_;
  reg [7:0] _65_;
  reg _66_;
  reg _67_;
  reg _68_;
  reg _69_;
  reg [7:0] _70_;
  reg [3:0] _71_;
  reg [3:0] _72_;
  reg [3:0] _73_;
  reg _74_;
  reg _75_;
  reg _76_;
  reg _77_;
  output alu_s0;
  wire alu_s0;
  output alu_s1;
  wire alu_s1;
  input clock;
  wire clock;
  wire [3:0] current_state;
  output [7:0] d_addr;
  wire [7:0] d_addr;
  output d_rd;
  wire d_rd;
  output d_wr;
  wire d_wr;
  output i_rd;
  wire i_rd;
  input [15:0] ir_data_out;
  wire [15:0] ir_data_out;
  output ir_ld;
  wire ir_ld;
  output [3:0] leds;
  wire [3:0] leds;
  wire [3:0] next_state;
  output pc_clr;
  wire pc_clr;
  output pc_inc;
  wire pc_inc;
  output pc_ld;
  wire pc_ld;
  input reset;
  wire reset;
  output [3:0] rf_rp_addr;
  wire [3:0] rf_rp_addr;
  output rf_rp_rd;
  wire rf_rp_rd;
  input rf_rp_zero;
  wire rf_rp_zero;
  output [3:0] rf_rq_addr;
  wire [3:0] rf_rq_addr;
  output rf_rq_rd;
  wire rf_rq_rd;
  output rf_s0;
  wire rf_s0;
  output rf_s1;
  wire rf_s1;
  output [3:0] rf_w_addr;
  wire [3:0] rf_w_addr;
  output [7:0] rf_w_data;
  wire [7:0] rf_w_data;
  output rf_w_wr;
  wire rf_w_wr;
  assign _01_ = next_state == 4'h0;
  assign _02_ = next_state == 4'h1;
  assign _03_ = next_state == 4'h2;
  assign _04_ = next_state == 4'h4;
  assign _05_ = next_state == 4'h5;
  assign _06_ = next_state == 4'h6;
  assign _07_ = next_state == 4'h7;
  assign _08_ = next_state == 4'h8;
  assign _09_ = next_state == 4'h9;
  assign _10_ = next_state == 4'ha;
  assign _11_ = next_state == 4'h3;
  function [0:0] \147 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \147  = b[0:0];
      11'b?????????1?:
        \147  = b[1:1];
      11'b????????1??:
        \147  = b[2:2];
      11'b???????1???:
        \147  = b[3:3];
      11'b??????1????:
        \147  = b[4:4];
      11'b?????1?????:
        \147  = b[5:5];
      11'b????1??????:
        \147  = b[6:6];
      11'b???1???????:
        \147  = b[7:7];
      11'b??1????????:
        \147  = b[8:8];
      11'b?1?????????:
        \147  = b[9:9];
      11'b1??????????:
        \147  = b[10:10];
      default:
        \147  = a;
    endcase
  endfunction
  assign _12_ = \147 (_60_, { _60_, _60_, _60_, _60_, _60_, _60_, _60_, _60_, _60_, 2'h1 }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \150 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \150  = b[0:0];
      11'b?????????1?:
        \150  = b[1:1];
      11'b????????1??:
        \150  = b[2:2];
      11'b???????1???:
        \150  = b[3:3];
      11'b??????1????:
        \150  = b[4:4];
      11'b?????1?????:
        \150  = b[5:5];
      11'b????1??????:
        \150  = b[6:6];
      11'b???1???????:
        \150  = b[7:7];
      11'b??1????????:
        \150  = b[8:8];
      11'b?1?????????:
        \150  = b[9:9];
      11'b1??????????:
        \150  = b[10:10];
      default:
        \150  = a;
    endcase
  endfunction
  assign _13_ = \150 (_61_, { _61_, 1'h1, _61_, _61_, _61_, _61_, _61_, _61_, _61_, 1'h0, _61_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \156 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \156  = b[0:0];
      11'b?????????1?:
        \156  = b[1:1];
      11'b????????1??:
        \156  = b[2:2];
      11'b???????1???:
        \156  = b[3:3];
      11'b??????1????:
        \156  = b[4:4];
      11'b?????1?????:
        \156  = b[5:5];
      11'b????1??????:
        \156  = b[6:6];
      11'b???1???????:
        \156  = b[7:7];
      11'b??1????????:
        \156  = b[8:8];
      11'b?1?????????:
        \156  = b[9:9];
      11'b1??????????:
        \156  = b[10:10];
      default:
        \156  = a;
    endcase
  endfunction
  assign _14_ = \156 (_62_, { 1'h0, _62_, _62_, _62_, _62_, _62_, 3'h1, _62_, 1'h0 }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \161 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \161  = b[0:0];
      11'b?????????1?:
        \161  = b[1:1];
      11'b????????1??:
        \161  = b[2:2];
      11'b???????1???:
        \161  = b[3:3];
      11'b??????1????:
        \161  = b[4:4];
      11'b?????1?????:
        \161  = b[5:5];
      11'b????1??????:
        \161  = b[6:6];
      11'b???1???????:
        \161  = b[7:7];
      11'b??1????????:
        \161  = b[8:8];
      11'b?1?????????:
        \161  = b[9:9];
      11'b1??????????:
        \161  = b[10:10];
      default:
        \161  = a;
    endcase
  endfunction
  assign _15_ = \161 (_63_, { 1'h0, _63_, _63_, _63_, _63_, _63_, 2'h0, _63_, 1'h1, _63_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \165 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \165  = b[0:0];
      11'b?????????1?:
        \165  = b[1:1];
      11'b????????1??:
        \165  = b[2:2];
      11'b???????1???:
        \165  = b[3:3];
      11'b??????1????:
        \165  = b[4:4];
      11'b?????1?????:
        \165  = b[5:5];
      11'b????1??????:
        \165  = b[6:6];
      11'b???1???????:
        \165  = b[7:7];
      11'b??1????????:
        \165  = b[8:8];
      11'b?1?????????:
        \165  = b[9:9];
      11'b1??????????:
        \165  = b[10:10];
      default:
        \165  = a;
    endcase
  endfunction
  assign _16_ = \165 (_64_, { _64_, _64_, _64_, _64_, _64_, _64_, 2'h0, _64_, 1'h1, _64_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [7:0] \166 ;
    input [7:0] a;
    input [87:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \166  = b[7:0];
      11'b?????????1?:
        \166  = b[15:8];
      11'b????????1??:
        \166  = b[23:16];
      11'b???????1???:
        \166  = b[31:24];
      11'b??????1????:
        \166  = b[39:32];
      11'b?????1?????:
        \166  = b[47:40];
      11'b????1??????:
        \166  = b[55:48];
      11'b???1???????:
        \166  = b[63:56];
      11'b??1????????:
        \166  = b[71:64];
      11'b?1?????????:
        \166  = b[79:72];
      11'b1??????????:
        \166  = b[87:80];
      default:
        \166  = a;
    endcase
  endfunction
  assign _17_ = \166 (_65_, { _65_, _65_, _65_, _65_, _65_, _65_, ir_data_out[7:0], ir_data_out[7:0], _65_, _65_, _65_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \169 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \169  = b[0:0];
      11'b?????????1?:
        \169  = b[1:1];
      11'b????????1??:
        \169  = b[2:2];
      11'b???????1???:
        \169  = b[3:3];
      11'b??????1????:
        \169  = b[4:4];
      11'b?????1?????:
        \169  = b[5:5];
      11'b????1??????:
        \169  = b[6:6];
      11'b???1???????:
        \169  = b[7:7];
      11'b??1????????:
        \169  = b[8:8];
      11'b?1?????????:
        \169  = b[9:9];
      11'b1??????????:
        \169  = b[10:10];
      default:
        \169  = a;
    endcase
  endfunction
  assign _18_ = \169 (_66_, { _66_, _66_, _66_, _66_, _66_, _66_, _66_, 1'h1, _66_, 1'h0, _66_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \172 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \172  = b[0:0];
      11'b?????????1?:
        \172  = b[1:1];
      11'b????????1??:
        \172  = b[2:2];
      11'b???????1???:
        \172  = b[3:3];
      11'b??????1????:
        \172  = b[4:4];
      11'b?????1?????:
        \172  = b[5:5];
      11'b????1??????:
        \172  = b[6:6];
      11'b???1???????:
        \172  = b[7:7];
      11'b??1????????:
        \172  = b[8:8];
      11'b?1?????????:
        \172  = b[9:9];
      11'b1??????????:
        \172  = b[10:10];
      default:
        \172  = a;
    endcase
  endfunction
  assign _19_ = \172 (_67_, { _67_, _67_, _67_, _67_, _67_, _67_, 1'h1, _67_, _67_, 1'h0, _67_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \177 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \177  = b[0:0];
      11'b?????????1?:
        \177  = b[1:1];
      11'b????????1??:
        \177  = b[2:2];
      11'b???????1???:
        \177  = b[3:3];
      11'b??????1????:
        \177  = b[4:4];
      11'b?????1?????:
        \177  = b[5:5];
      11'b????1??????:
        \177  = b[6:6];
      11'b???1???????:
        \177  = b[7:7];
      11'b??1????????:
        \177  = b[8:8];
      11'b?1?????????:
        \177  = b[9:9];
      11'b1??????????:
        \177  = b[10:10];
      default:
        \177  = a;
    endcase
  endfunction
  assign _20_ = \177 (_68_, { _68_, _68_, _68_, 3'h2, _68_, 1'h0, _68_, _68_, _68_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \182 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \182  = b[0:0];
      11'b?????????1?:
        \182  = b[1:1];
      11'b????????1??:
        \182  = b[2:2];
      11'b???????1???:
        \182  = b[3:3];
      11'b??????1????:
        \182  = b[4:4];
      11'b?????1?????:
        \182  = b[5:5];
      11'b????1??????:
        \182  = b[6:6];
      11'b???1???????:
        \182  = b[7:7];
      11'b??1????????:
        \182  = b[8:8];
      11'b?1?????????:
        \182  = b[9:9];
      11'b1??????????:
        \182  = b[10:10];
      default:
        \182  = a;
    endcase
  endfunction
  assign _21_ = \182 (_69_, { _69_, _69_, _69_, 3'h0, _69_, 1'h1, _69_, _69_, _69_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [7:0] \183 ;
    input [7:0] a;
    input [87:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \183  = b[7:0];
      11'b?????????1?:
        \183  = b[15:8];
      11'b????????1??:
        \183  = b[23:16];
      11'b???????1???:
        \183  = b[31:24];
      11'b??????1????:
        \183  = b[39:32];
      11'b?????1?????:
        \183  = b[47:40];
      11'b????1??????:
        \183  = b[55:48];
      11'b???1???????:
        \183  = b[63:56];
      11'b??1????????:
        \183  = b[71:64];
      11'b?1?????????:
        \183  = b[79:72];
      11'b1??????????:
        \183  = b[87:80];
      default:
        \183  = a;
    endcase
  endfunction
  assign _22_ = \183 (_70_, { _70_, _70_, _70_, _70_, ir_data_out[7:0], _70_, _70_, _70_, _70_, _70_, _70_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [3:0] \184 ;
    input [3:0] a;
    input [43:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \184  = b[3:0];
      11'b?????????1?:
        \184  = b[7:4];
      11'b????????1??:
        \184  = b[11:8];
      11'b???????1???:
        \184  = b[15:12];
      11'b??????1????:
        \184  = b[19:16];
      11'b?????1?????:
        \184  = b[23:20];
      11'b????1??????:
        \184  = b[27:24];
      11'b???1???????:
        \184  = b[31:28];
      11'b??1????????:
        \184  = b[35:32];
      11'b?1?????????:
        \184  = b[39:36];
      11'b1??????????:
        \184  = b[43:40];
      default:
        \184  = a;
    endcase
  endfunction
  assign _23_ = \184 (_71_, { _71_, _71_, _71_, ir_data_out[3:0], ir_data_out[11:8], ir_data_out[3:0], _71_, ir_data_out[11:8], _71_, _71_, _71_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [3:0] \185 ;
    input [3:0] a;
    input [43:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \185  = b[3:0];
      11'b?????????1?:
        \185  = b[7:4];
      11'b????????1??:
        \185  = b[11:8];
      11'b???????1???:
        \185  = b[15:12];
      11'b??????1????:
        \185  = b[19:16];
      11'b?????1?????:
        \185  = b[23:20];
      11'b????1??????:
        \185  = b[27:24];
      11'b???1???????:
        \185  = b[31:28];
      11'b??1????????:
        \185  = b[35:32];
      11'b?1?????????:
        \185  = b[39:36];
      11'b1??????????:
        \185  = b[43:40];
      default:
        \185  = a;
    endcase
  endfunction
  assign _24_ = \185 (_72_, { _72_, _72_, ir_data_out[11:8], ir_data_out[11:8], _72_, ir_data_out[11:8], ir_data_out[11:8], _72_, _72_, _72_, _72_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [3:0] \186 ;
    input [3:0] a;
    input [43:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \186  = b[3:0];
      11'b?????????1?:
        \186  = b[7:4];
      11'b????????1??:
        \186  = b[11:8];
      11'b???????1???:
        \186  = b[15:12];
      11'b??????1????:
        \186  = b[19:16];
      11'b?????1?????:
        \186  = b[23:20];
      11'b????1??????:
        \186  = b[27:24];
      11'b???1???????:
        \186  = b[31:28];
      11'b??1????????:
        \186  = b[35:32];
      11'b?1?????????:
        \186  = b[39:36];
      11'b1??????????:
        \186  = b[43:40];
      default:
        \186  = a;
    endcase
  endfunction
  assign _25_ = \186 (_73_, { _73_, _73_, _73_, ir_data_out[7:4], _73_, ir_data_out[7:4], _73_, _73_, _73_, _73_, _73_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \192 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \192  = b[0:0];
      11'b?????????1?:
        \192  = b[1:1];
      11'b????????1??:
        \192  = b[2:2];
      11'b???????1???:
        \192  = b[3:3];
      11'b??????1????:
        \192  = b[4:4];
      11'b?????1?????:
        \192  = b[5:5];
      11'b????1??????:
        \192  = b[6:6];
      11'b???1???????:
        \192  = b[7:7];
      11'b??1????????:
        \192  = b[8:8];
      11'b?1?????????:
        \192  = b[9:9];
      11'b1??????????:
        \192  = b[10:10];
      default:
        \192  = a;
    endcase
  endfunction
  assign _26_ = \192 (_74_, { _74_, _74_, _74_, 3'h7, _74_, 1'h1, _74_, 1'h0, _74_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \198 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \198  = b[0:0];
      11'b?????????1?:
        \198  = b[1:1];
      11'b????????1??:
        \198  = b[2:2];
      11'b???????1???:
        \198  = b[3:3];
      11'b??????1????:
        \198  = b[4:4];
      11'b?????1?????:
        \198  = b[5:5];
      11'b????1??????:
        \198  = b[6:6];
      11'b???1???????:
        \198  = b[7:7];
      11'b??1????????:
        \198  = b[8:8];
      11'b?1?????????:
        \198  = b[9:9];
      11'b1??????????:
        \198  = b[10:10];
      default:
        \198  = a;
    endcase
  endfunction
  assign _27_ = \198 (_75_, { _75_, _75_, 2'h3, _75_, 2'h3, _75_, _75_, 1'h0, _75_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \202 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \202  = b[0:0];
      11'b?????????1?:
        \202  = b[1:1];
      11'b????????1??:
        \202  = b[2:2];
      11'b???????1???:
        \202  = b[3:3];
      11'b??????1????:
        \202  = b[4:4];
      11'b?????1?????:
        \202  = b[5:5];
      11'b????1??????:
        \202  = b[6:6];
      11'b???1???????:
        \202  = b[7:7];
      11'b??1????????:
        \202  = b[8:8];
      11'b?1?????????:
        \202  = b[9:9];
      11'b1??????????:
        \202  = b[10:10];
      default:
        \202  = a;
    endcase
  endfunction
  assign _28_ = \202 (_76_, { _76_, _76_, _76_, 1'h1, _76_, 1'h1, _76_, _76_, _76_, 1'h0, _76_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \205 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \205  = b[0:0];
      11'b?????????1?:
        \205  = b[1:1];
      11'b????????1??:
        \205  = b[2:2];
      11'b???????1???:
        \205  = b[3:3];
      11'b??????1????:
        \205  = b[4:4];
      11'b?????1?????:
        \205  = b[5:5];
      11'b????1??????:
        \205  = b[6:6];
      11'b???1???????:
        \205  = b[7:7];
      11'b??1????????:
        \205  = b[8:8];
      11'b?1?????????:
        \205  = b[9:9];
      11'b1??????????:
        \205  = b[10:10];
      default:
        \205  = a;
    endcase
  endfunction
  assign _29_ = \205 (_77_, { _77_, _77_, _77_, 1'h0, _77_, 1'h1, _77_, _77_, _77_, _77_, _77_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  function [0:0] \208 ;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \208  = b[0:0];
      11'b?????????1?:
        \208  = b[1:1];
      11'b????????1??:
        \208  = b[2:2];
      11'b???????1???:
        \208  = b[3:3];
      11'b??????1????:
        \208  = b[4:4];
      11'b?????1?????:
        \208  = b[5:5];
      11'b????1??????:
        \208  = b[6:6];
      11'b???1???????:
        \208  = b[7:7];
      11'b??1????????:
        \208  = b[8:8];
      11'b?1?????????:
        \208  = b[9:9];
      11'b1??????????:
        \208  = b[10:10];
      default:
        \208  = a;
    endcase
  endfunction
  assign _30_ = \208 (_00_, { _00_, _00_, _00_, 1'h1, _00_, 1'h0, _00_, _00_, _00_, _00_, _00_ }, { _11_, _10_, _09_, _08_, _07_, _06_, _05_, _04_, _03_, _02_, _01_ });
  assign _31_ = current_state == 4'h0;
  assign _32_ = current_state == 4'h1;
  assign _33_ = current_state == 4'h2;
  assign _34_ = ir_data_out[15:12] == 4'h0;
  assign _35_ = ir_data_out[15:12] == 4'h1;
  assign _36_ = ir_data_out[15:12] == 4'h2;
  assign _37_ = ir_data_out[15:12] == 4'h3;
  assign _38_ = ir_data_out[15:12] == 4'h4;
  assign _39_ = ir_data_out[15:12] == 4'h5;
  function [3:0] \258 ;
    input [3:0] a;
    input [23:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \258  = b[3:0];
      6'b????1?:
        \258  = b[7:4];
      6'b???1??:
        \258  = b[11:8];
      6'b??1???:
        \258  = b[15:12];
      6'b?1????:
        \258  = b[19:16];
      6'b1?????:
        \258  = b[23:20];
      default:
        \258  = a;
    endcase
  endfunction
  assign _40_ = \258 (4'h1, 24'h987654, { _39_, _38_, _37_, _36_, _35_, _34_ });
  assign _41_ = current_state == 4'h3;
  assign _42_ = rf_rp_zero ? 4'ha : 4'h1;
  assign _43_ = current_state == 4'h9;
  assign _44_ = current_state == 4'ha;
  function [3:0] \274 ;
    input [3:0] a;
    input [23:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \274  = b[3:0];
      6'b????1?:
        \274  = b[7:4];
      6'b???1??:
        \274  = b[11:8];
      6'b??1???:
        \274  = b[15:12];
      6'b?1????:
        \274  = b[19:16];
      6'b1?????:
        \274  = b[23:20];
      default:
        \274  = a;
    endcase
  endfunction
  assign _45_ = \274 (4'h1, { 4'h1, _42_, _40_, 12'h321 }, { _44_, _43_, _41_, _33_, _32_, _31_ });
  assign _46_ = reset ? 4'h0 : _45_;
  assign _47_ = current_state == 4'h0;
  assign _48_ = current_state == 4'h1;
  assign _49_ = current_state == 4'h2;
  assign _50_ = current_state == 4'h3;
  assign _51_ = current_state == 4'h4;
  assign _52_ = current_state == 4'h5;
  assign _53_ = current_state == 4'h6;
  assign _54_ = current_state == 4'h7;
  assign _55_ = current_state == 4'h8;
  assign _56_ = current_state == 4'h9;
  assign _57_ = current_state == 4'ha;
  function [3:0] \314 ;
    input [3:0] a;
    input [43:0] b;
    input [10:0] s;
    (* parallel_case *)
    casez (s)
      11'b??????????1:
        \314  = b[3:0];
      11'b?????????1?:
        \314  = b[7:4];
      11'b????????1??:
        \314  = b[11:8];
      11'b???????1???:
        \314  = b[15:12];
      11'b??????1????:
        \314  = b[19:16];
      11'b?????1?????:
        \314  = b[23:20];
      11'b????1??????:
        \314  = b[27:24];
      11'b???1???????:
        \314  = b[31:28];
      11'b??1????????:
        \314  = b[35:32];
      11'b?1?????????:
        \314  = b[39:36];
      11'b1??????????:
        \314  = b[43:40];
      default:
        \314  = a;
    endcase
  endfunction
  assign _58_ = \314 (4'hf, 44'hba987654321, { _57_, _56_, _55_, _54_, _53_, _52_, _51_, _50_, _49_, _48_, _47_ });
  always @(posedge clock)
    _59_ <= next_state;
  always @(posedge clock)
    _60_ <= _12_;
  always @(posedge clock)
    _61_ <= _13_;
  always @(posedge clock)
    _62_ <= _14_;
  always @(posedge clock)
    _63_ <= _15_;
  always @(posedge clock)
    _64_ <= _16_;
  always @(posedge clock)
    _65_ <= _17_;
  always @(posedge clock)
    _66_ <= _18_;
  always @(posedge clock)
    _67_ <= _19_;
  always @(posedge clock)
    _68_ <= _20_;
  always @(posedge clock)
    _69_ <= _21_;
  always @(posedge clock)
    _70_ <= _22_;
  always @(posedge clock)
    _71_ <= _23_;
  always @(posedge clock)
    _72_ <= _24_;
  always @(posedge clock)
    _73_ <= _25_;
  always @(posedge clock)
    _74_ <= _26_;
  always @(posedge clock)
    _75_ <= _27_;
  always @(posedge clock)
    _76_ <= _28_;
  always @(posedge clock)
    _77_ <= _29_;
  always @(posedge clock)
    _00_ <= _30_;
  assign current_state = _59_;
  assign next_state = _46_;
  assign pc_clr = _60_;
  assign pc_ld = _61_;
  assign pc_inc = _62_;
  assign ir_ld = _63_;
  assign i_rd = _64_;
  assign leds = _58_;
  assign d_addr = _65_;
  assign d_rd = _66_;
  assign d_wr = _67_;
  assign rf_s1 = _68_;
  assign rf_s0 = _69_;
  assign rf_w_data = _70_;
  assign rf_w_addr = _71_;
  assign rf_rp_addr = _72_;
  assign rf_rq_addr = _73_;
  assign rf_w_wr = _74_;
  assign rf_rp_rd = _75_;
  assign rf_rq_rd = _76_;
  assign alu_s0 = _77_;
  assign alu_s1 = _00_;
endmodule

module ir(clock, ir_data_in, ir_ld, ir_data_out);
  wire [15:0] _0_;
  reg [15:0] _1_ = 16'hzzzz;
  input clock;
  wire clock;
  input [15:0] ir_data_in;
  wire [15:0] ir_data_in;
  output [15:0] ir_data_out;
  wire [15:0] ir_data_out;
  input ir_ld;
  wire ir_ld;
  assign _0_ = ir_ld ? ir_data_in : _1_;
  always @(posedge clock)
    _1_ <= _0_;
  assign ir_data_out = _1_;
endmodule

module pc(clock, pc_inc, pc_clr, pc_ld, ir_inc, i_addr);
  wire [15:0] _0_;
  wire [15:0] _1_;
  wire [15:0] _2_;
  wire [15:0] _3_;
  wire [15:0] _4_;
  wire [15:0] _5_;
  reg [15:0] _6_ = 16'h0000;
  input clock;
  wire clock;
  output [15:0] i_addr;
  wire [15:0] i_addr;
  input [7:0] ir_inc;
  wire [7:0] ir_inc;
  input pc_clr;
  wire pc_clr;
  wire [15:0] pc_count;
  input pc_inc;
  wire pc_inc;
  input pc_ld;
  wire pc_ld;
  assign _0_ = pc_count + 16'h0001;
  assign _1_ = pc_count + { 8'h00, ir_inc };
  assign _2_ = _1_ - 16'h0001;
  assign _3_ = pc_ld ? _2_ : pc_count;
  assign _4_ = pc_clr ? 16'h0000 : _3_;
  assign _5_ = pc_inc ? _0_ : _4_;
  always @(posedge clock)
    _6_ <= _5_;
  assign pc_count = _6_;
  assign i_addr = pc_count;
endmodule

module uc(clock, reset, I_data, RF_Rp_zero, leds, I_addr, I_rd, D_addr, D_rd, D_wr, RF_W_wr, RF_Rp_rd, RF_Rq_rd, RF_W_addr, RF_Rp_addr, RF_Rq_addr, RF_s0, RF_s1, RF_W_data, alu_s0, alu_s1
);
  wire _00_;
  wire _01_;
  wire _02_;
  wire [7:0] _03_;
  wire [3:0] _04_;
  wire [3:0] _05_;
  wire [3:0] _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire [15:0] _13_;
  wire [15:0] _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire [3:0] _18_;
  wire [7:0] _19_;
  wire _20_;
  wire _21_;
  output [7:0] D_addr;
  wire [7:0] D_addr;
  output D_rd;
  wire D_rd;
  output D_wr;
  wire D_wr;
  output [15:0] I_addr;
  wire [15:0] I_addr;
  input [15:0] I_data;
  wire [15:0] I_data;
  output I_rd;
  wire I_rd;
  output [3:0] RF_Rp_addr;
  wire [3:0] RF_Rp_addr;
  output RF_Rp_rd;
  wire RF_Rp_rd;
  input RF_Rp_zero;
  wire RF_Rp_zero;
  output [3:0] RF_Rq_addr;
  wire [3:0] RF_Rq_addr;
  output RF_Rq_rd;
  wire RF_Rq_rd;
  output [3:0] RF_W_addr;
  wire [3:0] RF_W_addr;
  output [7:0] RF_W_data;
  wire [7:0] RF_W_data;
  output RF_W_wr;
  wire RF_W_wr;
  output RF_s0;
  wire RF_s0;
  output RF_s1;
  wire RF_s1;
  output alu_s0;
  wire alu_s0;
  output alu_s1;
  wire alu_s1;
  wire \bc_0:18 ;
  wire \bc_0:19 ;
  wire \bc_0:20 ;
  wire \bc_0:21 ;
  wire \bc_0:22 ;
  wire [3:0] \bc_0:23 ;
  wire [7:0] \bc_0:24 ;
  wire \bc_0:25 ;
  wire \bc_0:26 ;
  wire \bc_0:27 ;
  wire \bc_0:28 ;
  wire [7:0] \bc_0:29 ;
  wire [3:0] \bc_0:30 ;
  wire [3:0] \bc_0:31 ;
  wire [3:0] \bc_0:32 ;
  wire \bc_0:33 ;
  wire \bc_0:34 ;
  wire \bc_0:35 ;
  wire \bc_0:36 ;
  wire \bc_0:37 ;
  input clock;
  wire clock;
  wire [15:0] \ir_0:82 ;
  wire [15:0] ir_data_out;
  wire ir_ld;
  output [3:0] leds;
  wire [3:0] leds;
  wire [15:0] \pc_0:79 ;
  wire pc_clr;
  wire pc_inc;
  wire pc_ld;
  input reset;
  wire reset;
  bc bc_0 (
    .alu_s0(_10_),
    .alu_s1(_12_),
    .clock(clock),
    .d_addr(_19_),
    .d_rd(_20_),
    .d_wr(_21_),
    .i_rd(_17_),
    .ir_data_out(ir_data_out),
    .ir_ld(_16_),
    .leds(_18_),
    .pc_clr(_00_),
    .pc_inc(_15_),
    .pc_ld(_11_),
    .reset(reset),
    .rf_rp_addr(_05_),
    .rf_rp_rd(_08_),
    .rf_rp_zero(RF_Rp_zero),
    .rf_rq_addr(_06_),
    .rf_rq_rd(_09_),
    .rf_s0(_02_),
    .rf_s1(_01_),
    .rf_w_addr(_04_),
    .rf_w_data(_03_),
    .rf_w_wr(_07_)
  );
  ir ir_0 (
    .clock(clock),
    .ir_data_in(I_data),
    .ir_data_out(_14_),
    .ir_ld(ir_ld)
  );
  pc pc_0 (
    .clock(clock),
    .i_addr(_13_),
    .ir_inc(ir_data_out[7:0]),
    .pc_clr(pc_clr),
    .pc_inc(pc_inc),
    .pc_ld(pc_ld)
  );
  assign pc_ld = \bc_0:19 ;
  assign pc_clr = \bc_0:18 ;
  assign pc_inc = \bc_0:20 ;
  assign ir_ld = \bc_0:21 ;
  assign ir_data_out = \ir_0:82 ;
  assign \bc_0:18  = _00_;
  assign \bc_0:19  = _11_;
  assign \bc_0:20  = _15_;
  assign \bc_0:21  = _16_;
  assign \bc_0:22  = _17_;
  assign \bc_0:23  = _18_;
  assign \bc_0:24  = _19_;
  assign \bc_0:25  = _20_;
  assign \bc_0:26  = _21_;
  assign \bc_0:27  = _01_;
  assign \bc_0:28  = _02_;
  assign \bc_0:29  = _03_;
  assign \bc_0:30  = _04_;
  assign \bc_0:31  = _05_;
  assign \bc_0:32  = _06_;
  assign \bc_0:33  = _07_;
  assign \bc_0:34  = _08_;
  assign \bc_0:35  = _09_;
  assign \bc_0:36  = _10_;
  assign \bc_0:37  = _12_;
  assign \pc_0:79  = _13_;
  assign \ir_0:82  = _14_;
  assign leds = \bc_0:23 ;
  assign I_addr = \pc_0:79 ;
  assign I_rd = \bc_0:22 ;
  assign D_addr = \bc_0:24 ;
  assign D_rd = \bc_0:25 ;
  assign D_wr = \bc_0:26 ;
  assign RF_W_wr = \bc_0:33 ;
  assign RF_Rp_rd = \bc_0:34 ;
  assign RF_Rq_rd = \bc_0:35 ;
  assign RF_W_addr = \bc_0:30 ;
  assign RF_Rp_addr = \bc_0:31 ;
  assign RF_Rq_addr = \bc_0:32 ;
  assign RF_s0 = \bc_0:28 ;
  assign RF_s1 = \bc_0:27 ;
  assign RF_W_data = \bc_0:29 ;
  assign alu_s0 = \bc_0:36 ;
  assign alu_s1 = \bc_0:37 ;
endmodule
