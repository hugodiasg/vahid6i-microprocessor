LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE work.constants.all;

ENTITY bc IS
	PORT (
	--Sinais para o PC e o IR
	clock,reset						: IN STD_LOGIC;
	IR_data							: IN STD_LOGIC_VECTOR (tamanho-1 downto 0); 
	PC_clr,PC_ld,PC_inc,IR_ld	: OUT STD_LOGIC;
	-- Leds para ver os estados
	leds	: OUT STD_LOGIC_VECTOR (7 downto 0);
	--Sinais de controle
	--Memd
	D_addr		:	OUT STD_LOGIC_VECTOR(tamanho_endereco_memd-1 downto 0); 
	D_rd,D_wr	:	OUT STD_LOGIC;
	--Mux
	RF_s1,RF_s0	: OUT STD_LOGIC;
	RF_W_data	: OUT STD_LOGIC_VECTOR(tamanho_data_mux-1 downto 0);
	--Regf
	RF_W_addr,RF_Rp_addr,RF_Rq_addr	: OUT STD_LOGIC_VECTOR(tamanho_regf-1 downto 0);
	RF_W_wr,RF_Rp_rd,RF_Rq_rd			: OUT STD_LOGIC;
	--ALU
	alu_s0,alu_s1	:	OUT STD_LOGIC;
	RF_Rp_zero		:  IN STD_LOGIC;
	);
END bc;

ARCHITECTURE arc_bc OF bc IS
	TYPE type_state IS (Inicio,Busca,Decod,Carregar,Armazenar,Somar,Carregar_Const,Subtrair,Saltar_se_zero,Saltar);
	SIGNAL current_state : type_state;
	SIGNAL next_state		: type_state;
	SIGNAL leds_aux		: STD_LOGIC_VECTOR(7 downto 0);
	
BEGIN
	att: PROCESS(clock,reset,next_state)
	BEGIN
		IF (clock'EVENT AND clock='1') THEN
			current_state<=next_state;
			leds<=leds_aux;
			IF (next_state=Inicio) THEN
				PC_clr<='1';
			ELSE
				PC_clr<='0';
			END IF;
		END IF;
	END PROCESS att;
	
		states: PROCESS(IR_data,reset, current_state)
	BEGIN
		IF (reset='1') THEN
			next_state<=Inicio;
			leds_aux<="00000001";
		ELSE
			CASE current_state IS
				WHEN Inicio =>
					next_state<=Busca;
					leds_aux<="00000010";
				WHEN Busca =>
					next_state<=Decod;
					leds_aux<="00000100";
				WHEN Decod =>
					CASE IR_data(tamanho_opcode-1 DOWNTO 0) IS
						WHEN "0000" =>
							next_state<=Carregar;
							leds_aux<="00001000";
						WHEN "0001" =>
							next_state<=Armazenar;
							leds_aux<="00010000";
						WHEN "0010" =>
							next_state<=Somar;
							leds_aux<="00100000";
						WHEN "0011" =>
							next_state<=Carregar_Const;
							leds_aux<="01000000";
						WHEN "0100" =>
							next_state<=Subtrair;
							leds_aux<="10000000";
						WHEN "0101" =>
							next_state<=Saltar_se_zero;
							leds_aux<="11000000";
						WHEN OTHERS => next_state<=Busca;
					END CASE;
				WHEN Saltar_se_zero =>
					next_state<=Saltar;
					leds_aux<="11100000";
				WHEN Saltar => 
					next_state<=Busca;
					leds_aux<="00000010";
				WHEN OTHERS => next_state<=Busca;
			END CASE;
		END IF;
	END PROCESS states;
	

	
END arc_bc;

 