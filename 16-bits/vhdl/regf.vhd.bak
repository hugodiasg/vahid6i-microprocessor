-- ALU 16 bits com funções de soma e subtração, e detecção igual a 0 da entrada A

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE work.constants.all;

ENTITY regf IS
	PORT (
		RF_W_addr,RF_Rp_addr
		alu_out			:	OUT STD_LOGIC_VECTOR(tamanho-1 downto 0)
	); 
--	zero				:	OUT STD_LOGIC);
END regf;

ARCHITECTURE arch OF regf IS 
	
	BEGIN
		--Detector de zero da entrada a
	--	zeros: PROCESS(a)
	--	BEGIN
	--		IF(a=0) THEN
				--zero<='1';
		--	ELSE
		--		zero<='0';
		--	END IF;
	--	END PROCESS zeros;

		--alu
		alu: PROCESS(a, b, alu_s0, alu_s1)
			BEGIN
			
			IF (alu_s1='0' AND alu_s0='0') THEN
				alu_out<=a;
			ELSIF (alu_s1='0' AND alu_s0='1') THEN
				alu_out<=std_logic_vector(unsigned(a)+unsigned(b));
			ELSIF (alu_s1='1' AND alu_s0='0') THEN
				alu_out<=std_logic_vector(unsigned(a)-unsigned(b));
			ELSE
				alu_out<="ZZZZZZZZZZZZZZZZ";
			END IF;
		END PROCESS alu;
	
END regf;

