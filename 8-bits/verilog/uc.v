/* Generated by Yosys 0.27+22 (git sha1 53c0a6b78, gcc 12.2.0-3ubuntu1 -fPIC -Os) */

module bc(clock, reset, ir_data_out, rf_rp_zero, pc_clr, pc_ld, pc_inc, ir_ld, i_rd, leds, d_addr, d_rd, d_wr, rf_s1, rf_s0, rf_w_data, rf_w_addr, rf_rp_addr, rf_rq_addr, rf_w_wr, rf_rp_rd
, rf_rq_rd, alu_s0, alu_s1);
  reg _00_;
  reg _01_;
  reg _02_;
  reg [3:0] _03_;
  reg [3:0] _04_;
  reg [3:0] _05_;
  reg _06_;
  reg _07_;
  reg _08_;
  reg _09_;
  reg _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire [7:0] _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire [3:0] _34_;
  wire [3:0] _35_;
  wire [3:0] _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  wire _48_;
  wire _49_;
  wire _50_;
  wire _51_;
  wire _52_;
  wire [3:0] _53_;
  wire _54_;
  wire [3:0] _55_;
  wire _56_;
  wire _57_;
  wire [3:0] _58_;
  wire [7:0] _59_;
  wire [7:0] _60_;
  wire [3:0] _61_;
  wire _62_;
  wire _63_;
  wire _64_;
  wire _65_;
  wire _66_;
  wire _67_;
  wire _68_;
  wire _69_;
  wire _70_;
  wire _71_;
  wire _72_;
  wire _73_;
  wire _74_;
  wire [3:0] _75_;
  reg [3:0] _76_ = 4'h0;
  wire _77_;
  reg [7:0] _78_;
  wire _79_;
  reg [7:0] _80_;
  reg _81_;
  reg _82_;
  reg _83_;
  reg _84_;
  reg _85_;
  reg [7:0] _86_;
  reg _87_;
  output alu_s0;
  wire alu_s0;
  output alu_s1;
  wire alu_s1;
  input clock;
  wire clock;
  wire [3:0] current_state;
  output [7:0] d_addr;
  wire [7:0] d_addr;
  output d_rd;
  wire d_rd;
  output d_wr;
  wire d_wr;
  wire [7:0] first_byte;
  output i_rd;
  wire i_rd;
  input [7:0] ir_data_out;
  wire [7:0] ir_data_out;
  output ir_ld;
  wire ir_ld;
  output [3:0] leds;
  wire [3:0] leds;
  wire [3:0] next_state;
  output pc_clr;
  wire pc_clr;
  output pc_inc;
  wire pc_inc;
  output pc_ld;
  wire pc_ld;
  input reset;
  wire reset;
  output [3:0] rf_rp_addr;
  wire [3:0] rf_rp_addr;
  output rf_rp_rd;
  wire rf_rp_rd;
  input rf_rp_zero;
  wire rf_rp_zero;
  output [3:0] rf_rq_addr;
  wire [3:0] rf_rq_addr;
  output rf_rq_rd;
  wire rf_rq_rd;
  output rf_s0;
  wire rf_s0;
  output rf_s1;
  wire rf_s1;
  output [3:0] rf_w_addr;
  wire [3:0] rf_w_addr;
  output [7:0] rf_w_data;
  wire [7:0] rf_w_data;
  output rf_w_wr;
  wire rf_w_wr;
  wire [7:0] second_byte;
  assign _11_ = next_state == 4'h0;
  assign _12_ = next_state == 4'h1;
  assign _13_ = next_state == 4'h2;
  assign _14_ = next_state == 4'h3;
  assign _15_ = next_state == 4'h4;
  assign _16_ = next_state == 4'h6;
  assign _17_ = next_state == 4'h7;
  assign _18_ = next_state == 4'h8;
  assign _19_ = next_state == 4'h9;
  assign _20_ = next_state == 4'ha;
  assign _21_ = next_state == 4'hb;
  assign _22_ = next_state == 4'hc;
  assign _23_ = next_state == 4'h5;
  function [0:0] \147 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \147  = b[0:0];
      13'b???????????1?:
        \147  = b[1:1];
      13'b??????????1??:
        \147  = b[2:2];
      13'b?????????1???:
        \147  = b[3:3];
      13'b????????1????:
        \147  = b[4:4];
      13'b???????1?????:
        \147  = b[5:5];
      13'b??????1??????:
        \147  = b[6:6];
      13'b?????1???????:
        \147  = b[7:7];
      13'b????1????????:
        \147  = b[8:8];
      13'b???1?????????:
        \147  = b[9:9];
      13'b??1??????????:
        \147  = b[10:10];
      13'b?1???????????:
        \147  = b[11:11];
      13'b1????????????:
        \147  = b[12:12];
      default:
        \147  = a;
    endcase
  endfunction
  assign _24_ = \147 (_81_, { _81_, _81_, _81_, _81_, _81_, _81_, _81_, _81_, _81_, _81_, _81_, 2'h1 }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \150 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \150  = b[0:0];
      13'b???????????1?:
        \150  = b[1:1];
      13'b??????????1??:
        \150  = b[2:2];
      13'b?????????1???:
        \150  = b[3:3];
      13'b????????1????:
        \150  = b[4:4];
      13'b???????1?????:
        \150  = b[5:5];
      13'b??????1??????:
        \150  = b[6:6];
      13'b?????1???????:
        \150  = b[7:7];
      13'b????1????????:
        \150  = b[8:8];
      13'b???1?????????:
        \150  = b[9:9];
      13'b??1??????????:
        \150  = b[10:10];
      13'b?1???????????:
        \150  = b[11:11];
      13'b1????????????:
        \150  = b[12:12];
      default:
        \150  = a;
    endcase
  endfunction
  assign _25_ = \150 (_82_, { _82_, 1'h1, _82_, _82_, _82_, _82_, _82_, _82_, _82_, _82_, _82_, 1'h0, _82_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \156 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \156  = b[0:0];
      13'b???????????1?:
        \156  = b[1:1];
      13'b??????????1??:
        \156  = b[2:2];
      13'b?????????1???:
        \156  = b[3:3];
      13'b????????1????:
        \156  = b[4:4];
      13'b???????1?????:
        \156  = b[5:5];
      13'b??????1??????:
        \156  = b[6:6];
      13'b?????1???????:
        \156  = b[7:7];
      13'b????1????????:
        \156  = b[8:8];
      13'b???1?????????:
        \156  = b[9:9];
      13'b??1??????????:
        \156  = b[10:10];
      13'b?1???????????:
        \156  = b[11:11];
      13'b1????????????:
        \156  = b[12:12];
      default:
        \156  = a;
    endcase
  endfunction
  assign _26_ = \156 (_83_, { 1'h0, _83_, _83_, _83_, _83_, _83_, _83_, _83_, 3'h5, _83_, 1'h0 }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \159 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \159  = b[0:0];
      13'b???????????1?:
        \159  = b[1:1];
      13'b??????????1??:
        \159  = b[2:2];
      13'b?????????1???:
        \159  = b[3:3];
      13'b????????1????:
        \159  = b[4:4];
      13'b???????1?????:
        \159  = b[5:5];
      13'b??????1??????:
        \159  = b[6:6];
      13'b?????1???????:
        \159  = b[7:7];
      13'b????1????????:
        \159  = b[8:8];
      13'b???1?????????:
        \159  = b[9:9];
      13'b??1??????????:
        \159  = b[10:10];
      13'b?1???????????:
        \159  = b[11:11];
      13'b1????????????:
        \159  = b[12:12];
      default:
        \159  = a;
    endcase
  endfunction
  assign _27_ = \159 (_84_, { _84_, _84_, _84_, _84_, _84_, _84_, _84_, _84_, _84_, 1'h1, _84_, 1'h1, _84_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \162 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \162  = b[0:0];
      13'b???????????1?:
        \162  = b[1:1];
      13'b??????????1??:
        \162  = b[2:2];
      13'b?????????1???:
        \162  = b[3:3];
      13'b????????1????:
        \162  = b[4:4];
      13'b???????1?????:
        \162  = b[5:5];
      13'b??????1??????:
        \162  = b[6:6];
      13'b?????1???????:
        \162  = b[7:7];
      13'b????1????????:
        \162  = b[8:8];
      13'b???1?????????:
        \162  = b[9:9];
      13'b??1??????????:
        \162  = b[10:10];
      13'b?1???????????:
        \162  = b[11:11];
      13'b1????????????:
        \162  = b[12:12];
      default:
        \162  = a;
    endcase
  endfunction
  assign _28_ = \162 (_85_, { _85_, _85_, _85_, _85_, _85_, _85_, _85_, _85_, _85_, 1'h1, _85_, 1'h1, _85_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [7:0] \163 ;
    input [7:0] a;
    input [103:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \163  = b[7:0];
      13'b???????????1?:
        \163  = b[15:8];
      13'b??????????1??:
        \163  = b[23:16];
      13'b?????????1???:
        \163  = b[31:24];
      13'b????????1????:
        \163  = b[39:32];
      13'b???????1?????:
        \163  = b[47:40];
      13'b??????1??????:
        \163  = b[55:48];
      13'b?????1???????:
        \163  = b[63:56];
      13'b????1????????:
        \163  = b[71:64];
      13'b???1?????????:
        \163  = b[79:72];
      13'b??1??????????:
        \163  = b[87:80];
      13'b?1???????????:
        \163  = b[95:88];
      13'b1????????????:
        \163  = b[103:96];
      default:
        \163  = a;
    endcase
  endfunction
  assign _29_ = \163 (_86_, { _86_, _86_, _86_, _86_, _86_, _86_, second_byte, second_byte, _86_, _86_, _86_, _86_, _86_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \166 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \166  = b[0:0];
      13'b???????????1?:
        \166  = b[1:1];
      13'b??????????1??:
        \166  = b[2:2];
      13'b?????????1???:
        \166  = b[3:3];
      13'b????????1????:
        \166  = b[4:4];
      13'b???????1?????:
        \166  = b[5:5];
      13'b??????1??????:
        \166  = b[6:6];
      13'b?????1???????:
        \166  = b[7:7];
      13'b????1????????:
        \166  = b[8:8];
      13'b???1?????????:
        \166  = b[9:9];
      13'b??1??????????:
        \166  = b[10:10];
      13'b?1???????????:
        \166  = b[11:11];
      13'b1????????????:
        \166  = b[12:12];
      default:
        \166  = a;
    endcase
  endfunction
  assign _30_ = \166 (_87_, { _87_, _87_, _87_, _87_, _87_, _87_, _87_, 1'h1, _87_, _87_, _87_, 1'h0, _87_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \169 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \169  = b[0:0];
      13'b???????????1?:
        \169  = b[1:1];
      13'b??????????1??:
        \169  = b[2:2];
      13'b?????????1???:
        \169  = b[3:3];
      13'b????????1????:
        \169  = b[4:4];
      13'b???????1?????:
        \169  = b[5:5];
      13'b??????1??????:
        \169  = b[6:6];
      13'b?????1???????:
        \169  = b[7:7];
      13'b????1????????:
        \169  = b[8:8];
      13'b???1?????????:
        \169  = b[9:9];
      13'b??1??????????:
        \169  = b[10:10];
      13'b?1???????????:
        \169  = b[11:11];
      13'b1????????????:
        \169  = b[12:12];
      default:
        \169  = a;
    endcase
  endfunction
  assign _31_ = \169 (_00_, { _00_, _00_, _00_, _00_, _00_, _00_, 1'h1, _00_, _00_, _00_, _00_, 1'h0, _00_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \174 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \174  = b[0:0];
      13'b???????????1?:
        \174  = b[1:1];
      13'b??????????1??:
        \174  = b[2:2];
      13'b?????????1???:
        \174  = b[3:3];
      13'b????????1????:
        \174  = b[4:4];
      13'b???????1?????:
        \174  = b[5:5];
      13'b??????1??????:
        \174  = b[6:6];
      13'b?????1???????:
        \174  = b[7:7];
      13'b????1????????:
        \174  = b[8:8];
      13'b???1?????????:
        \174  = b[9:9];
      13'b??1??????????:
        \174  = b[10:10];
      13'b?1???????????:
        \174  = b[11:11];
      13'b1????????????:
        \174  = b[12:12];
      default:
        \174  = a;
    endcase
  endfunction
  assign _32_ = \174 (_01_, { _01_, _01_, _01_, 3'h2, _01_, 1'h0, _01_, _01_, _01_, _01_, _01_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \179 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \179  = b[0:0];
      13'b???????????1?:
        \179  = b[1:1];
      13'b??????????1??:
        \179  = b[2:2];
      13'b?????????1???:
        \179  = b[3:3];
      13'b????????1????:
        \179  = b[4:4];
      13'b???????1?????:
        \179  = b[5:5];
      13'b??????1??????:
        \179  = b[6:6];
      13'b?????1???????:
        \179  = b[7:7];
      13'b????1????????:
        \179  = b[8:8];
      13'b???1?????????:
        \179  = b[9:9];
      13'b??1??????????:
        \179  = b[10:10];
      13'b?1???????????:
        \179  = b[11:11];
      13'b1????????????:
        \179  = b[12:12];
      default:
        \179  = a;
    endcase
  endfunction
  assign _33_ = \179 (_02_, { _02_, _02_, _02_, 3'h0, _02_, 1'h1, _02_, _02_, _02_, _02_, _02_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [3:0] \180 ;
    input [3:0] a;
    input [51:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \180  = b[3:0];
      13'b???????????1?:
        \180  = b[7:4];
      13'b??????????1??:
        \180  = b[11:8];
      13'b?????????1???:
        \180  = b[15:12];
      13'b????????1????:
        \180  = b[19:16];
      13'b???????1?????:
        \180  = b[23:20];
      13'b??????1??????:
        \180  = b[27:24];
      13'b?????1???????:
        \180  = b[31:28];
      13'b????1????????:
        \180  = b[35:32];
      13'b???1?????????:
        \180  = b[39:36];
      13'b??1??????????:
        \180  = b[43:40];
      13'b?1???????????:
        \180  = b[47:44];
      13'b1????????????:
        \180  = b[51:48];
      default:
        \180  = a;
    endcase
  endfunction
  assign _34_ = \180 (_03_, { _03_, _03_, _03_, second_byte[3:0], first_byte[3:0], second_byte[3:0], _03_, first_byte[3:0], _03_, _03_, _03_, _03_, _03_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [3:0] \181 ;
    input [3:0] a;
    input [51:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \181  = b[3:0];
      13'b???????????1?:
        \181  = b[7:4];
      13'b??????????1??:
        \181  = b[11:8];
      13'b?????????1???:
        \181  = b[15:12];
      13'b????????1????:
        \181  = b[19:16];
      13'b???????1?????:
        \181  = b[23:20];
      13'b??????1??????:
        \181  = b[27:24];
      13'b?????1???????:
        \181  = b[31:28];
      13'b????1????????:
        \181  = b[35:32];
      13'b???1?????????:
        \181  = b[39:36];
      13'b??1??????????:
        \181  = b[43:40];
      13'b?1???????????:
        \181  = b[47:44];
      13'b1????????????:
        \181  = b[51:48];
      default:
        \181  = a;
    endcase
  endfunction
  assign _35_ = \181 (_04_, { _04_, _04_, first_byte[3:0], first_byte[3:0], _04_, first_byte[3:0], first_byte[3:0], _04_, _04_, _04_, _04_, _04_, _04_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [3:0] \182 ;
    input [3:0] a;
    input [51:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \182  = b[3:0];
      13'b???????????1?:
        \182  = b[7:4];
      13'b??????????1??:
        \182  = b[11:8];
      13'b?????????1???:
        \182  = b[15:12];
      13'b????????1????:
        \182  = b[19:16];
      13'b???????1?????:
        \182  = b[23:20];
      13'b??????1??????:
        \182  = b[27:24];
      13'b?????1???????:
        \182  = b[31:28];
      13'b????1????????:
        \182  = b[35:32];
      13'b???1?????????:
        \182  = b[39:36];
      13'b??1??????????:
        \182  = b[43:40];
      13'b?1???????????:
        \182  = b[47:44];
      13'b1????????????:
        \182  = b[51:48];
      default:
        \182  = a;
    endcase
  endfunction
  assign _36_ = \182 (_05_, { _05_, _05_, _05_, second_byte[7:4], _05_, second_byte[7:4], _05_, _05_, _05_, _05_, _05_, _05_, _05_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \188 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \188  = b[0:0];
      13'b???????????1?:
        \188  = b[1:1];
      13'b??????????1??:
        \188  = b[2:2];
      13'b?????????1???:
        \188  = b[3:3];
      13'b????????1????:
        \188  = b[4:4];
      13'b???????1?????:
        \188  = b[5:5];
      13'b??????1??????:
        \188  = b[6:6];
      13'b?????1???????:
        \188  = b[7:7];
      13'b????1????????:
        \188  = b[8:8];
      13'b???1?????????:
        \188  = b[9:9];
      13'b??1??????????:
        \188  = b[10:10];
      13'b?1???????????:
        \188  = b[11:11];
      13'b1????????????:
        \188  = b[12:12];
      default:
        \188  = a;
    endcase
  endfunction
  assign _37_ = \188 (_06_, { _06_, _06_, _06_, 3'h7, _06_, 1'h1, _06_, _06_, _06_, 1'h0, _06_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \194 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \194  = b[0:0];
      13'b???????????1?:
        \194  = b[1:1];
      13'b??????????1??:
        \194  = b[2:2];
      13'b?????????1???:
        \194  = b[3:3];
      13'b????????1????:
        \194  = b[4:4];
      13'b???????1?????:
        \194  = b[5:5];
      13'b??????1??????:
        \194  = b[6:6];
      13'b?????1???????:
        \194  = b[7:7];
      13'b????1????????:
        \194  = b[8:8];
      13'b???1?????????:
        \194  = b[9:9];
      13'b??1??????????:
        \194  = b[10:10];
      13'b?1???????????:
        \194  = b[11:11];
      13'b1????????????:
        \194  = b[12:12];
      default:
        \194  = a;
    endcase
  endfunction
  assign _38_ = \194 (_07_, { _07_, _07_, 2'h3, _07_, 2'h3, _07_, _07_, _07_, _07_, 1'h0, _07_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \198 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \198  = b[0:0];
      13'b???????????1?:
        \198  = b[1:1];
      13'b??????????1??:
        \198  = b[2:2];
      13'b?????????1???:
        \198  = b[3:3];
      13'b????????1????:
        \198  = b[4:4];
      13'b???????1?????:
        \198  = b[5:5];
      13'b??????1??????:
        \198  = b[6:6];
      13'b?????1???????:
        \198  = b[7:7];
      13'b????1????????:
        \198  = b[8:8];
      13'b???1?????????:
        \198  = b[9:9];
      13'b??1??????????:
        \198  = b[10:10];
      13'b?1???????????:
        \198  = b[11:11];
      13'b1????????????:
        \198  = b[12:12];
      default:
        \198  = a;
    endcase
  endfunction
  assign _39_ = \198 (_08_, { _08_, _08_, _08_, 1'h1, _08_, 1'h1, _08_, _08_, _08_, _08_, _08_, 1'h0, _08_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \201 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \201  = b[0:0];
      13'b???????????1?:
        \201  = b[1:1];
      13'b??????????1??:
        \201  = b[2:2];
      13'b?????????1???:
        \201  = b[3:3];
      13'b????????1????:
        \201  = b[4:4];
      13'b???????1?????:
        \201  = b[5:5];
      13'b??????1??????:
        \201  = b[6:6];
      13'b?????1???????:
        \201  = b[7:7];
      13'b????1????????:
        \201  = b[8:8];
      13'b???1?????????:
        \201  = b[9:9];
      13'b??1??????????:
        \201  = b[10:10];
      13'b?1???????????:
        \201  = b[11:11];
      13'b1????????????:
        \201  = b[12:12];
      default:
        \201  = a;
    endcase
  endfunction
  assign _40_ = \201 (_09_, { _09_, _09_, _09_, 1'h0, _09_, 1'h1, _09_, _09_, _09_, _09_, _09_, _09_, _09_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  function [0:0] \204 ;
    input [0:0] a;
    input [12:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \204  = b[0:0];
      13'b???????????1?:
        \204  = b[1:1];
      13'b??????????1??:
        \204  = b[2:2];
      13'b?????????1???:
        \204  = b[3:3];
      13'b????????1????:
        \204  = b[4:4];
      13'b???????1?????:
        \204  = b[5:5];
      13'b??????1??????:
        \204  = b[6:6];
      13'b?????1???????:
        \204  = b[7:7];
      13'b????1????????:
        \204  = b[8:8];
      13'b???1?????????:
        \204  = b[9:9];
      13'b??1??????????:
        \204  = b[10:10];
      13'b?1???????????:
        \204  = b[11:11];
      13'b1????????????:
        \204  = b[12:12];
      default:
        \204  = a;
    endcase
  endfunction
  assign _41_ = \204 (_10_, { _10_, _10_, _10_, 1'h1, _10_, 1'h0, _10_, _10_, _10_, _10_, _10_, _10_, _10_ }, { _23_, _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_, _13_, _12_, _11_ });
  assign _42_ = current_state == 4'h0;
  assign _43_ = current_state == 4'h1;
  assign _44_ = current_state == 4'h2;
  assign _45_ = current_state == 4'h3;
  assign _46_ = current_state == 4'h4;
  assign _47_ = first_byte[7:4] == 4'h0;
  assign _48_ = first_byte[7:4] == 4'h1;
  assign _49_ = first_byte[7:4] == 4'h2;
  assign _50_ = first_byte[7:4] == 4'h3;
  assign _51_ = first_byte[7:4] == 4'h4;
  assign _52_ = first_byte[7:4] == 4'h5;
  function [3:0] \257 ;
    input [3:0] a;
    input [23:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \257  = b[3:0];
      6'b????1?:
        \257  = b[7:4];
      6'b???1??:
        \257  = b[11:8];
      6'b??1???:
        \257  = b[15:12];
      6'b?1????:
        \257  = b[19:16];
      6'b1?????:
        \257  = b[23:20];
      default:
        \257  = a;
    endcase
  endfunction
  assign _53_ = \257 (4'h1, 24'hba9876, { _52_, _51_, _50_, _49_, _48_, _47_ });
  assign _54_ = current_state == 4'h5;
  assign _55_ = rf_rp_zero ? 4'hc : 4'h1;
  assign _56_ = current_state == 4'hb;
  assign _57_ = current_state == 4'hc;
  function [3:0] \275 ;
    input [3:0] a;
    input [31:0] b;
    input [7:0] s;
    (* parallel_case *)
    casez (s)
      8'b???????1:
        \275  = b[3:0];
      8'b??????1?:
        \275  = b[7:4];
      8'b?????1??:
        \275  = b[11:8];
      8'b????1???:
        \275  = b[15:12];
      8'b???1????:
        \275  = b[19:16];
      8'b??1?????:
        \275  = b[23:20];
      8'b?1??????:
        \275  = b[27:24];
      8'b1???????:
        \275  = b[31:28];
      default:
        \275  = a;
    endcase
  endfunction
  assign _58_ = \275 (4'h1, { 4'h1, _55_, _53_, 20'h54321 }, { _57_, _56_, _54_, _46_, _45_, _44_, _43_, _42_ });
  function [7:0] \276 ;
    input [7:0] a;
    input [63:0] b;
    input [7:0] s;
    (* parallel_case *)
    casez (s)
      8'b???????1:
        \276  = b[7:0];
      8'b??????1?:
        \276  = b[15:8];
      8'b?????1??:
        \276  = b[23:16];
      8'b????1???:
        \276  = b[31:24];
      8'b???1????:
        \276  = b[39:32];
      8'b??1?????:
        \276  = b[47:40];
      8'b?1??????:
        \276  = b[55:48];
      8'b1???????:
        \276  = b[63:56];
      default:
        \276  = a;
    endcase
  endfunction
  assign _59_ = \276 (first_byte, { first_byte, first_byte, first_byte, first_byte, first_byte, ir_data_out, first_byte, first_byte }, { _57_, _56_, _54_, _46_, _45_, _44_, _43_, _42_ });
  function [7:0] \277 ;
    input [7:0] a;
    input [63:0] b;
    input [7:0] s;
    (* parallel_case *)
    casez (s)
      8'b???????1:
        \277  = b[7:0];
      8'b??????1?:
        \277  = b[15:8];
      8'b?????1??:
        \277  = b[23:16];
      8'b????1???:
        \277  = b[31:24];
      8'b???1????:
        \277  = b[39:32];
      8'b??1?????:
        \277  = b[47:40];
      8'b?1??????:
        \277  = b[55:48];
      8'b1???????:
        \277  = b[63:56];
      default:
        \277  = a;
    endcase
  endfunction
  assign _60_ = \277 (second_byte, { second_byte, second_byte, second_byte, ir_data_out, second_byte, second_byte, second_byte, second_byte }, { _57_, _56_, _54_, _46_, _45_, _44_, _43_, _42_ });
  assign _61_ = reset ? 4'h0 : _58_;
  assign _62_ = current_state == 4'h0;
  assign _63_ = current_state == 4'h1;
  assign _64_ = current_state == 4'h2;
  assign _65_ = current_state == 4'h3;
  assign _66_ = current_state == 4'h4;
  assign _67_ = current_state == 4'h5;
  assign _68_ = current_state == 4'h6;
  assign _69_ = current_state == 4'h7;
  assign _70_ = current_state == 4'h8;
  assign _71_ = current_state == 4'h9;
  assign _72_ = current_state == 4'ha;
  assign _73_ = current_state == 4'hb;
  assign _74_ = current_state == 4'hc;
  function [3:0] \325 ;
    input [3:0] a;
    input [51:0] b;
    input [12:0] s;
    (* parallel_case *)
    casez (s)
      13'b????????????1:
        \325  = b[3:0];
      13'b???????????1?:
        \325  = b[7:4];
      13'b??????????1??:
        \325  = b[11:8];
      13'b?????????1???:
        \325  = b[15:12];
      13'b????????1????:
        \325  = b[19:16];
      13'b???????1?????:
        \325  = b[23:20];
      13'b??????1??????:
        \325  = b[27:24];
      13'b?????1???????:
        \325  = b[31:28];
      13'b????1????????:
        \325  = b[35:32];
      13'b???1?????????:
        \325  = b[39:36];
      13'b??1??????????:
        \325  = b[43:40];
      13'b?1???????????:
        \325  = b[47:44];
      13'b1????????????:
        \325  = b[51:48];
      default:
        \325  = a;
    endcase
  endfunction
  assign _75_ = \325 (4'hf, 52'hdcba987654321, { _74_, _73_, _72_, _71_, _70_, _69_, _68_, _67_, _66_, _65_, _64_, _63_, _62_ });
  always @(posedge clock)
    _76_ <= next_state;
  assign _77_ = ~ reset;
  always @*
    if (_77_) _78_ = _59_;
  assign _79_ = ~ reset;
  always @*
    if (_79_) _80_ = _60_;
  always @(posedge clock)
    _81_ <= _24_;
  always @(posedge clock)
    _82_ <= _25_;
  always @(posedge clock)
    _83_ <= _26_;
  always @(posedge clock)
    _84_ <= _27_;
  always @(posedge clock)
    _85_ <= _28_;
  always @(posedge clock)
    _86_ <= _29_;
  always @(posedge clock)
    _87_ <= _30_;
  always @(posedge clock)
    _00_ <= _31_;
  always @(posedge clock)
    _01_ <= _32_;
  always @(posedge clock)
    _02_ <= _33_;
  always @(posedge clock)
    _03_ <= _34_;
  always @(posedge clock)
    _04_ <= _35_;
  always @(posedge clock)
    _05_ <= _36_;
  always @(posedge clock)
    _06_ <= _37_;
  always @(posedge clock)
    _07_ <= _38_;
  always @(posedge clock)
    _08_ <= _39_;
  always @(posedge clock)
    _09_ <= _40_;
  always @(posedge clock)
    _10_ <= _41_;
  assign current_state = _76_;
  assign next_state = _61_;
  assign first_byte = _78_;
  assign second_byte = _80_;
  assign pc_clr = _81_;
  assign pc_ld = _82_;
  assign pc_inc = _83_;
  assign ir_ld = _84_;
  assign i_rd = _85_;
  assign leds = _75_;
  assign d_addr = _86_;
  assign d_rd = _87_;
  assign d_wr = _00_;
  assign rf_s1 = _01_;
  assign rf_s0 = _02_;
  assign rf_w_data = second_byte;
  assign rf_w_addr = _03_;
  assign rf_rp_addr = _04_;
  assign rf_rq_addr = _05_;
  assign rf_w_wr = _06_;
  assign rf_rp_rd = _07_;
  assign rf_rq_rd = _08_;
  assign alu_s0 = _09_;
  assign alu_s1 = _10_;
endmodule

module ir(clock, ir_data_in, ir_ld, ir_data_out);
  wire [7:0] _0_;
  reg [7:0] _1_ = 8'hzz;
  input clock;
  wire clock;
  input [7:0] ir_data_in;
  wire [7:0] ir_data_in;
  output [7:0] ir_data_out;
  wire [7:0] ir_data_out;
  input ir_ld;
  wire ir_ld;
  assign _0_ = ir_ld ? ir_data_in : _1_;
  always @(posedge clock)
    _1_ <= _0_;
  assign ir_data_out = _1_;
endmodule

module pc(clock, pc_inc, pc_clr, pc_ld, ir_inc, i_addr);
  wire [7:0] _0_;
  wire [7:0] _1_;
  wire [7:0] _2_;
  wire [7:0] _3_;
  wire [7:0] _4_;
  wire [7:0] _5_;
  reg [7:0] _6_ = 8'h00;
  input clock;
  wire clock;
  output [7:0] i_addr;
  wire [7:0] i_addr;
  input [7:0] ir_inc;
  wire [7:0] ir_inc;
  input pc_clr;
  wire pc_clr;
  wire [7:0] pc_count;
  input pc_inc;
  wire pc_inc;
  input pc_ld;
  wire pc_ld;
  assign _0_ = pc_count + 8'h01;
  assign _1_ = pc_count + ir_inc;
  assign _2_ = _1_ - 8'h01;
  assign _3_ = pc_ld ? _2_ : pc_count;
  assign _4_ = pc_clr ? 8'h00 : _3_;
  assign _5_ = pc_inc ? _0_ : _4_;
  always @(posedge clock)
    _6_ <= _5_;
  assign pc_count = _6_;
  assign i_addr = pc_count;
endmodule

module uc(clock, reset, I_data, RF_Rp_zero, I_addr, I_rd, leds, D_addr, D_rd, D_wr, RF_W_wr, RF_Rp_rd, RF_Rq_rd, RF_W_addr, RF_Rp_addr, RF_Rq_addr, RF_s0, RF_s1, RF_W_data, alu_s0, alu_s1
);
  wire _00_;
  wire _01_;
  wire _02_;
  wire [7:0] _03_;
  wire [3:0] _04_;
  wire [3:0] _05_;
  wire [3:0] _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire [7:0] _13_;
  wire [7:0] _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire [3:0] _18_;
  wire [7:0] _19_;
  wire _20_;
  wire _21_;
  output [7:0] D_addr;
  wire [7:0] D_addr;
  output D_rd;
  wire D_rd;
  output D_wr;
  wire D_wr;
  output [7:0] I_addr;
  wire [7:0] I_addr;
  input [7:0] I_data;
  wire [7:0] I_data;
  output I_rd;
  wire I_rd;
  output [3:0] RF_Rp_addr;
  wire [3:0] RF_Rp_addr;
  output RF_Rp_rd;
  wire RF_Rp_rd;
  input RF_Rp_zero;
  wire RF_Rp_zero;
  output [3:0] RF_Rq_addr;
  wire [3:0] RF_Rq_addr;
  output RF_Rq_rd;
  wire RF_Rq_rd;
  output [3:0] RF_W_addr;
  wire [3:0] RF_W_addr;
  output [7:0] RF_W_data;
  wire [7:0] RF_W_data;
  output RF_W_wr;
  wire RF_W_wr;
  output RF_s0;
  wire RF_s0;
  output RF_s1;
  wire RF_s1;
  output alu_s0;
  wire alu_s0;
  output alu_s1;
  wire alu_s1;
  wire \bc_0:18 ;
  wire \bc_0:19 ;
  wire \bc_0:20 ;
  wire \bc_0:21 ;
  wire \bc_0:22 ;
  wire [3:0] \bc_0:23 ;
  wire [7:0] \bc_0:24 ;
  wire \bc_0:25 ;
  wire \bc_0:26 ;
  wire \bc_0:27 ;
  wire \bc_0:28 ;
  wire [7:0] \bc_0:29 ;
  wire [3:0] \bc_0:30 ;
  wire [3:0] \bc_0:31 ;
  wire [3:0] \bc_0:32 ;
  wire \bc_0:33 ;
  wire \bc_0:34 ;
  wire \bc_0:35 ;
  wire \bc_0:36 ;
  wire \bc_0:37 ;
  input clock;
  wire clock;
  wire [7:0] \ir_0:81 ;
  wire [7:0] ir_data_out;
  wire ir_ld;
  output [3:0] leds;
  wire [3:0] leds;
  wire [7:0] \pc_0:78 ;
  wire pc_clr;
  wire pc_inc;
  wire pc_ld;
  input reset;
  wire reset;
  bc bc_0 (
    .alu_s0(_10_),
    .alu_s1(_12_),
    .clock(clock),
    .d_addr(_19_),
    .d_rd(_20_),
    .d_wr(_21_),
    .i_rd(_17_),
    .ir_data_out(ir_data_out),
    .ir_ld(_16_),
    .leds(_18_),
    .pc_clr(_00_),
    .pc_inc(_15_),
    .pc_ld(_11_),
    .reset(reset),
    .rf_rp_addr(_05_),
    .rf_rp_rd(_08_),
    .rf_rp_zero(RF_Rp_zero),
    .rf_rq_addr(_06_),
    .rf_rq_rd(_09_),
    .rf_s0(_02_),
    .rf_s1(_01_),
    .rf_w_addr(_04_),
    .rf_w_data(_03_),
    .rf_w_wr(_07_)
  );
  ir ir_0 (
    .clock(clock),
    .ir_data_in(I_data),
    .ir_data_out(_14_),
    .ir_ld(ir_ld)
  );
  pc pc_0 (
    .clock(clock),
    .i_addr(_13_),
    .ir_inc(ir_data_out),
    .pc_clr(pc_clr),
    .pc_inc(pc_inc),
    .pc_ld(pc_ld)
  );
  assign pc_ld = \bc_0:19 ;
  assign pc_clr = \bc_0:18 ;
  assign pc_inc = \bc_0:20 ;
  assign ir_ld = \bc_0:21 ;
  assign ir_data_out = \ir_0:81 ;
  assign \bc_0:18  = _00_;
  assign \bc_0:19  = _11_;
  assign \bc_0:20  = _15_;
  assign \bc_0:21  = _16_;
  assign \bc_0:22  = _17_;
  assign \bc_0:23  = _18_;
  assign \bc_0:24  = _19_;
  assign \bc_0:25  = _20_;
  assign \bc_0:26  = _21_;
  assign \bc_0:27  = _01_;
  assign \bc_0:28  = _02_;
  assign \bc_0:29  = _03_;
  assign \bc_0:30  = _04_;
  assign \bc_0:31  = _05_;
  assign \bc_0:32  = _06_;
  assign \bc_0:33  = _07_;
  assign \bc_0:34  = _08_;
  assign \bc_0:35  = _09_;
  assign \bc_0:36  = _10_;
  assign \bc_0:37  = _12_;
  assign \pc_0:78  = _13_;
  assign \ir_0:81  = _14_;
  assign I_addr = \pc_0:78 ;
  assign I_rd = \bc_0:22 ;
  assign leds = \bc_0:23 ;
  assign D_addr = \bc_0:24 ;
  assign D_rd = \bc_0:25 ;
  assign D_wr = \bc_0:26 ;
  assign RF_W_wr = \bc_0:33 ;
  assign RF_Rp_rd = \bc_0:34 ;
  assign RF_Rq_rd = \bc_0:35 ;
  assign RF_W_addr = \bc_0:30 ;
  assign RF_Rp_addr = \bc_0:31 ;
  assign RF_Rq_addr = \bc_0:32 ;
  assign RF_s0 = \bc_0:28 ;
  assign RF_s1 = \bc_0:27 ;
  assign RF_W_data = \bc_0:29 ;
  assign alu_s0 = \bc_0:36 ;
  assign alu_s1 = \bc_0:37 ;
endmodule
